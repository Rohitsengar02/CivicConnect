rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /admins/{adminId} {
      allow read, write: if isSuperAdmin();
    }

    match /districtAdmins/{docId} {
      allow read, write: if false;
    }

    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    match /anonymousIssues/{issueId} {
      allow read: if true;
      allow create: if true;
      allow update: if isAdmin();
      allow delete: if isSuperAdmin();
    }
    
    match /anonymousIssues/{issueId}/votes/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /profiledIssues/{issueId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.reporterId;
      allow update: if isAdmin();
      allow delete: if request.auth.uid == resource.data.reporterId || isSuperAdmin();
    }
    
    match /profiledIssues/{issueId}/votes/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
