
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for unique admin district
    function isAdminDistrictUnique(district) {
      return !exists(/databases/$(database)/documents/admins/$(request.auth.uid))
             && !exists(/databases/$(database)/documents/admins/^(?!(request.auth.uid)).*?$/)
             where get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.district == district;
    }
    
    // Admins: Only one admin per district, status can only be changed by superadmin
    match /admins/{userId} {
      allow read: if true;
      allow create: if request.auth != null 
                     && request.resource.data.status == 'pending'
                     && isAdminDistrictUnique(request.resource.data.district);
      allow update: if request.auth.token.superadmin == true; // Only superadmin can update (e.g., approve)
      allow delete: if request.auth.token.superadmin == true;
    }

    // Districts: Publicly readable list
    match /districts/{districtId} {
        allow read: if true;
        allow write: if request.auth.token.superadmin == true; // Only superadmin can add districts
    }

    // Issues: Users can create, only reporter or admin can modify/delete
    match /issues/{issueId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.resource.data.reporterId == request.auth.uid || get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin');
    }

    // User Profiles: Users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}

    