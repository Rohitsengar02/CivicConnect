rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admins: Only one admin per district
    match /admins/{adminId} {
      allow read;
      // Allow create if the user is authenticated and no other admin for that district exists.
      allow create: if request.auth != null && 
                       !exists(/databases/$(database)/documents/admins/$(request.auth.uid)) &&
                       !districtAlreadyHasAdmin(request.resource.data.district);
      allow update, delete: if request.auth.uid == adminId;
    }

    // Districts: Publicly readable list of districts
    match /districts/{districtId} {
      allow read;
      allow write: if false; // Should be managed from the console
    }

    // Issues: User-submitted reports
    match /issues/{issueId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.reporterId || 
                       exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow delete: if request.auth.uid == resource.data.reporterId ||
                       exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users: Can only manage their own profile
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Helper function to check for existing admins in a district
    function districtAlreadyHasAdmin(district) {
      return getAfter(/databases/$(database)/documents/admins/$(request.auth.uid)).data.district == district;
    }
  }
}
