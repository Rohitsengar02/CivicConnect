rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function getSuperAdminUid() {
      return env.SUPER_ADMIN_UID;
    }

    // Admins can be managed by the super admin
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == getSuperAdminUid();
      allow get: if request.auth != null;
      allow create: if request.auth != null;
    }

    // District mappings can be created by a new admin for themselves, or managed by super admin
    match /districtAdmins/{districtId} {
      allow read, write: if request.auth != null && request.auth.uid == getSuperAdminUid();
      allow create: if request.auth != null && request.resource.data.adminId == request.auth.uid;
      allow get: if request.auth != null;
    }

    // Issues can be read by anyone, created by anyone, and updated/deleted only by the reporter or an admin
    match /{collection}/{issueId} {
      allow read: if true;
      allow create: if true;

      // Allow updates/deletes if user is the original reporter
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.reporterId;
      
      // Allow voting by any authenticated user
      match /votes/{userId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Users can only manage their own data
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Notifications:
      // - A user can read/delete their own notifications
      // - Any authenticated user can create a notification for another user (for votes, etc.)
      match /notifications/{notificationId} {
        allow read, delete: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null;
      }
      
      // Saved Issues:
      // - A user can manage their own saved issues
      match /savedIssues/{issueId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}
